openapi: 3.0.0
info:
  version: 1.0.0
  title: Dog Shelter Back End Demonstration API
  description: A dog shelter application to adopt dogs!
  contact:
    name: Kyriakos Gerogiades
    email: georgiak@uni.coventry.ac.uk
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://famous-pyramid-3000.codio-box.uk/api/v1'
    description: Development server
tags:
  - name: Users
    description: API endpoints for user management.
  - name: Dogs
    description: Access and perform CRUD operations on dog entries.
  - name: Favourites
    description: Access and perform CRUD operations on Favourites list.
paths:
  /users:
    summary: Represents an individual user
    description: >
      This resource represents an individual user in the system.
      Each user is identified by a numeric `id`.
    post:
      tags:
        - Users
      description:
        Create a new user account.
      requestBody:
        description: All new user data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./users.json#/definitions/user
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: ./users.json#/definitions/userUpdated
    get:
      tags:
        - Users
      description:
        Get a list of all users.
      responses:
        '201':
          description: List of users
          content:
            application/json:
              schema:
                $ref: ./users.json#/definitions/userList
        '401':
          description: Only workers can list all accounts
  /users/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric id of the user
    get:
      tags:
        - Users
      description:
        Get user by id.
      responses:
        '200':
          description: View of user record
          content:
            application/json:
              schema:
                $ref: ./users.json#/definitions/userView
        '401':
          description: Non-admin users can only view their own record
        '404':
          description: Not found
    put:
      tags:
        - Users
      description:
        Update user by id.
      requestBody:
        description: Update a visible property or the password.
        required: true
        content:
          application/json:
            schema:
              $ref: ./users.json#/definitions/userUpdate
      responses:
        '201':
          description: Confirmation and link to record.
          content:
            application/json:
              schema:
                $ref: ./users.json#/definitions/userUpdated
        '404':
          description: Not found
    delete:
      tags:
        - Users
      description:
        Delete user by id.
      responses:
        '200':
          description: Confirmation of deletion.
          content:
            application/json:
              schema:
                $ref: ./users.json#/definitions/userDeleted
        '401':
          description: Only admin users can delete accounts
        '404':
          description: Not found
					
  /dogs:
    summary: Represents a single dog
    description: >
      This resource represents an individual dog in the system.
      Each dog is identified by a numeric `id`.
    post:
      tags:
        - Dogs
      description:
        Create a Dog entry.
      requestBody:
        description: All new dog data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./dogs.json#/definitions/dog
      responses:
        '201':
          description: Dog Created
          content:
            application/json:
              schema:
                $ref: ./dogs.json#/definitions/dogCreated
    get:
      tags:
        - Dogs
      description:
        Get a list of all dogs.
      responses:
        '201':
          description: List of dogs
          content:
            application/json:
              schema:
                $ref: ./dogs.json#/definitions/dogsList
        '404':
          description: Request not found
  /dogs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric id of the dog
    get:
      tags:
        - Dogs
      description:
        Get dog by id.
      responses:
        '200':
          description: View of dog record
          content:
            application/json:
              schema:
                $ref: ./dogs.json#/definitions/dogView
        '404':
          description: Not found
    put:
      tags:
        - Dogs
      description:
        Update dog by id.
      requestBody:
        description: Update properties of the dog.
        required: true
        content:
          application/json:
            schema:
              $ref: ./dogs.json#/definitions/dogUpdate
      responses:
        '201':
          description: Confirmation and link to record.
          content:
            application/json:
              schema:
                $ref: ./dogs.json#/definitions/dogUpdated
        '403':
          description: Operation Denied only workers can update dogs
        '404':
          description: Not found
    delete:
      tags:
        - Dogs
      description:
        Delete dog by id.
      responses:
        '200':
          description: Confirmation of deletion.
          content:
            application/json:
              schema:
                $ref: ./dogs.json#/definitions/dogDeleted
        '403':
          description: Only workers can delete dogs
        '404':
          description: Not found
  /dogs/search:
    parameters:
      - in: path
        name: search
        schema:
          type: string
        required: true
        description: Value to search for
    get:
      tags:
        - Dogs
      description:
        Get dogs by searching/filtering.
      responses:
        '201':
          description: View of dogs records matching the searching value
          content:
            application/json:
              schema:
                $ref: ./dogs.json#/definitions/dogView
        '404':
          description: Not found
  /favs:
    summary: Represents a list of favourites dogs of a user
    description: >
      This resource represents an individual list in the system.
    post:
      tags:
        - Favourites
      description:
        Add a new dog to the list.
      requestBody:
        description: Selected dog.
        required: true
        content:
          application/json:
            schema:
              $ref: ./favourites.json#/definitions/favourites
      responses:
        '201':
          description: Dog added to the list
          content:
            application/json:
              schema:
                $ref: ./favourites.json#/definitions/favUpdated
        '404':
          description: Not found
    get:
      tags:
        - Favourites
      description:
        Get a list of a user favourite dogs.
      responses:
        '201':
          description: List of favourite dogs of a user
          content:
            application/json:
              schema:
                $ref: ./favourites.json#/definitions/favList
        '403':
          description: Only owner can request the list
        '404':
          description: Not found
  /favs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric id of the dog in the list
    get:
      tags:
        - Favourites
      description:
        Get dog from the favourite list by id.
      responses:
        '201':
          description: View of dog record that exists in user favourite list
          content:
            application/json:
              schema:
                $ref: ./favourites.json#/definitions/favView
        '401':
          description: Non-admin users can only view their own record
        '404':
          description: Not found
    delete:
      tags:
        - Favourites
      description:
        Delete a dog from user favourite list.
      responses:
        '201':
          description: Confirmation of deletion.
          content:
            application/json:
              schema:
                $ref: ./favourites.json#/definitions/favDeleted
        '403':
          description: Only owners of the list can delete dogs from the list
        '404':
          description: Not found
